React Course 22/07/2024

React is a javaScript library which returns the html Component.

class component:

import React, { Component } from 'react'

export default class App extends Component {
  render() {
    return (
      <div>
        
      </div>
    )
  }
}


Function Compoenent:
import React from 'react'

export default function App() {
  return (
    <div>App</div>
  )
}


State:
	export default class App extends Component {

		// Constructor is used in class based components and super() is by default gets called
		// it calls the constructor of parent class which is inherited.
		
		constructor(){
			super();
			this.state={
				Name:"Bhartesh",
			}
		}
		
	  render() {

		return (
		  <div>
			<span>{this.state.Name}</span>
			<Button onClick={()=>{
				this.setState({
					Name:"Girmal"
				});
				
			}}>Click here</button>
		  </div>
		)
	  }
	}
	
Shallow Merge:

this.setState((state, props)=>{
	return {	
		Name :{firstName:"Bhartesh", lastName:"Girmal"};
	}
}, ()=>{
	console.log(this.state);
})

Mapping Arrays to Elements
this.state={
	
	monsters:[
	{Name:"Monster1"},{Name:"Monster2"},{Name:"Monster3"},{Name:"Monster4"},{Name:"Monster5"},]
}

{this.state.monsters.map((monster)=>
	{
		// while using map key attribute value is complsory
		return <h1 key={monster.name}>monster.name</h1>
	})
}
  
// The keys are used for rendering the purpose, only required HTML only

Single Page Applications :

Component Lify cycle Methods
1.componentDidMount()
2.componentDidUpdate()
3.componentWillUnMount()

componentDidMount(){

	fetch('https://jsonplaceholder.typicode.com/users').then((response)=>
	{
		return response.json()
	
	}).then((data)=>{
		console.log(data);
	}).catch((err)=>{
		console.log(err.message);
	})
	
	// using async await
	
	const fetchData = async () => {
    try {
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json();
        console.log(data);
    } catch (err) {
			console.log(err.message);
		}
	};
	
	// Using Axios
	const fetchDataWithAxios = async () => {
    try {
        const response = await axios.get('https://jsonplaceholder.typicode.com/users');
        const data = response.data;
        console.log(data);
    } catch (err) {
			console.log(err.message);
		}
	};
}


      